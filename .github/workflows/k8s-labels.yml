name: Метки и аннотации K8s CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
  - cron: "15 7 * * *"
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Канареечное развертывание на основе меток и множества экземпляров
      run: |
        cd time-service
        # используем легковесный кластер kind для простых тестов
        kind create cluster
        # новая версия time-service
        docker build . -t time-service:0.2.0
        # развертывание time-service, в том числе канареечный 
        kubectl apply -f k8s/
        kubectl apply -f k8s/canary/
        # ожидание запуска
        kubectl rollout status deployment/time-service --timeout 60s
        kubectl rollout status deployment/time-service-canary --timeout 60s
        # переадресация порта (фоновый режим, небольшое ожидание)
        kubectl port-forward service/time-service 8080 &
        sleep 5s
        # запрос сервиса 7 раз, вызывается или канареечный выпуск, или обычный (сетевое соединение стабильно)
        for i in {1..7}
        do
          curl -s 0.0.0.0:8080/time; sleep 1;
        done
    - name: Сине-зеленое развертывание на основе меток
      run: |
        # удалим предыдушие варианты time-service
        kubectl delete deploy/time-service
        kubectl delete svc/time-service
        kubectl apply -f k8s/blue-green/blue/
        # ожидание запуска
        kubectl rollout status deployment/time-service --timeout 60s
        # зеленое развертывание
        kubectl apply -f k8s/blue-green/green/k8s-time-deploy-green.yaml 
        kubectl rollout status deployment/time-service-green --timeout 60s
        # текущая версия - синяя
        for i in {1..7}
        do
          curl -s 0.0.0.0:8080/time; sleep 1;
        done
